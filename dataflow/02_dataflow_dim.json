{
	"name": "02_dataflow_dim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomerCSV",
						"type": "DatasetReference"
					},
					"name": "CustomerTablestream"
				},
				{
					"dataset": {
						"referenceName": "Product",
						"type": "DatasetReference"
					},
					"name": "ProductTablestream"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "ProductModelstream"
				},
				{
					"dataset": {
						"referenceName": "ProductCategory",
						"type": "DatasetReference"
					},
					"name": "ProductCategorystream"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "GETMAXValueofCustomerSK"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "DimProductLatest"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomer",
						"type": "DatasetReference"
					},
					"name": "CustomerDimstream"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "ProductDimstream"
				},
				{
					"name": "CustomerSKSink"
				}
			],
			"transformations": [
				{
					"name": "ProductTablejoinProductModel"
				},
				{
					"name": "joinProductCategory"
				},
				{
					"name": "selectcolumnstream"
				},
				{
					"name": "ProductSKstream"
				},
				{
					"name": "custselectcolumnstream"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "CustomerSKUpdated"
				},
				{
					"name": "DoesProductsExists"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CustomerTablestream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductTablestream",
				"source(output(",
				"          ProductModelID as integer,",
				"          Name as string,",
				"          CatalogDescription as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductModelstream",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductCategorystream",
				"source(output(",
				"          CustomerSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select max([CustomerSK]) as CustomerSK From [dbo].[DimCustomer]',",
				"     format: 'query',",
				"     staged: true) ~> GETMAXValueofCustomerSK",
				"source(output(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductModelID as integer,",
				"          ProductcategoryID as integer,",
				"          ProductName as string,",
				"          ProductModelName as string,",
				"          ProductCategoryName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> DimProductLatest",
				"DoesProductsExists, ProductModelstream join(ProductTablestream@ProductModelID == ProductModelstream@ProductModelID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductTablejoinProductModel",
				"ProductTablejoinProductModel, ProductCategorystream join(ProductTablestream@ProductCategoryID == ProductCategorystream@ProductCategoryID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinProductCategory",
				"joinProductCategory select(mapColumn(",
				"          ProductID,",
				"          ProductName = ProductTablestream@Name,",
				"          ProductCategoryID = ProductTablestream@ProductCategoryID,",
				"          ProductModelID = ProductTablestream@ProductModelID,",
				"          ProductModelName = ProductModelstream@Name,",
				"          ProductCategoryName = ProductCategorystream@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectcolumnstream",
				"selectcolumnstream keyGenerate(output(ProductSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ProductSKstream",
				"CustomerTablestream select(mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> custselectcolumnstream",
				"custselectcolumnstream keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CustomerSK = CustomerSK + CustomerSKSink#outputs()[1].CustomerSK) ~> CustomerSKUpdated",
				"ProductTablestream, DimProductLatest exists(ProductTablestream@ProductID == DimProductLatest@ProductID,",
				"     negate:true,",
				"     broadcast: 'auto')~> DoesProductsExists",
				"CustomerSKUpdated sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerSK,",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     )) ~> CustomerDimstream",
				"ProductSKstream sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductModelID as integer,",
				"          ProductcategoryID as integer,",
				"          ProductName as string,",
				"          ProductModelName as string,",
				"          ProductCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductSK,",
				"          ProductID,",
				"          ProductModelID,",
				"          ProductcategoryID = ProductCategoryID,",
				"          ProductName,",
				"          ProductModelName,",
				"          ProductCategoryName",
				"     )) ~> ProductDimstream",
				"GETMAXValueofCustomerSK sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          CustomerSK",
				"     )) ~> CustomerSKSink"
			]
		}
	}
}